<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
  <bean name="org.fcrepo.server.storage.lowlevel.ILowlevelStorage"
        class="org.fcrepo.server.storage.lowlevel.akubra.AkubraLowlevelStorage"
        singleton="true">
    <constructor-arg>
      <description>The store of serialized Fedora objects</description>
      <ref bean="objectStore"/>
    </constructor-arg>
    <constructor-arg>
      <description>The store of datastream content</description>
      <ref bean="datastreamStore"/>
    </constructor-arg>
    <constructor-arg value="true">
      <description>if true, replaceObject calls will be done in a way that
      ensures the old content is not deleted until the new content is safely
      written. If the objectStore already does this, this should be given as
      false</description>
    </constructor-arg>
    <constructor-arg value="true">
      <description>save as above, but for datastreamStore</description>
    </constructor-arg>
  </bean>
  
  <bean name="objectStore"
        class="org.akubraproject.map.IdMappingBlobStore"
        singleton="true">
    <constructor-arg value="urn:example.org:objectStore"/>
    <constructor-arg><ref bean="fsObjectStore"/></constructor-arg>
    <constructor-arg><ref bean="fsObjectStoreMapper"/></constructor-arg>
  </bean>

  <bean name="fsObjectStore"
        class="org.akubraproject.fs.FSBlobStore"
        singleton="true">
    <constructor-arg value="urn:example.org:fsObjectStore"/>
    <constructor-arg value="D:\fedora\data\objectStore"/>
  </bean>

  <bean name="fsObjectStoreMapper"
        class="org.fcrepo.server.storage.lowlevel.akubra.HashPathIdMapper"
        singleton="true">
    <constructor-arg value="##"/>
  </bean>

  <bean name="datastreamStore"
        class="com.atosorigin.bhle.BHLMuxBlobStore"
        singleton="true">
	<constructor-arg value="urn:fedora:datastreamStore"/>
	<constructor-arg><ref bean="longTermDatastreamStore"/></constructor-arg>
	<constructor-arg><ref bean="shortTermDatastreamStore"/></constructor-arg>
	<constructor-arg>
		<list>
			<value>FULL_SIZE</value>
			<value>ANYDATASTREAMIDYOUWANT</value>
		</list>
	</constructor-arg>
  </bean>

  <bean name="longTermDatastreamStore"
        class="org.akubraproject.map.IdMappingBlobStore"
        singleton="true">
    <constructor-arg value="urn:example.org:longTermDataStreamStore"/>
	<constructor-arg><ref bean="fslongTermDataStreamStore"/></constructor-arg>
	<constructor-arg><ref bean="longTermDatastreamStoreMapper"/></constructor-arg>
  </bean>
  
  <bean name="fslongTermDataStreamStore"
        class="org.akubraproject.fs.FSBlobStore"
        singleton="true">
    <constructor-arg value="urn:example.org:fslongTermDataStreamStore"/>
    <constructor-arg value="D:\fedora\data\longTermDataStream"/>
  </bean>

  <bean name="longTermDatastreamStoreMapper"
        class="org.fcrepo.server.storage.lowlevel.akubra.HashPathIdMapper"
        singleton="true">
    <constructor-arg value="##"/>
  </bean>
  
    <bean name="shortTermDatastreamStore"
        class="org.akubraproject.map.IdMappingBlobStore"
        singleton="true">
    <constructor-arg value="urn:example.org:longTermDataStreamStore"/>
    <constructor-arg><ref bean="fsshortTermDataStreamStore"/></constructor-arg>
	<constructor-arg><ref bean="shortDatastreamStoreMapper"/></constructor-arg>
  </bean>

  <bean name="fsshortTermDataStreamStore"
        class="org.akubraproject.fs.FSBlobStore"
        singleton="true">
    <constructor-arg value="urn:example.org:fsshortTermDataStreamStore"/>
    <constructor-arg value="D:\fedora\data\shortTermDataStream"/>
  </bean>
  
  <bean name="shortDatastreamStoreMapper"
        class="org.fcrepo.server.storage.lowlevel.akubra.HashPathIdMapper"
        singleton="true">
    <constructor-arg value="##"/>
  </bean>

</beans>
