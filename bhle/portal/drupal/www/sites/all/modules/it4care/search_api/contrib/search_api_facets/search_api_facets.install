<?php

/**
 * Implements hook_schema().
 */
function search_api_facets_schema() {
  $schema['search_api_facet'] = array(
    'description' => 'Stores all activated or configured facets of a site.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a facet.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'delta' => array(
        'description' => "The facet block's {block}.delta.",
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '0',
      ),
      'index_id' => array(
        'description' => 'The {search_api_index}.machine_name this facet belongs to.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'field' => array(
        'description' => 'The index field this facet belongs to.',
        'type' => 'varchar',
        'length' => 255,// This is ugly, but we can't be sure how long a field name might get.
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The human-readable name to be displayed for this block.',
        'type' => 'varchar',
        'length' => 80,
        'not null' => TRUE,
      ),
      'enabled' => array(
        'description' => 'A flag indicating whether the facet is enabled.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'options' => array(
        'description' => 'The options used to configure the facet.',
        'type' => 'text',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'The exportable status of the entity.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'field' => array('index_id', array('field', 50)),
      'enabled' => array('enabled'),
    ),
    'unique keys' => array(
      'delta' => array('delta'),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function search_api_facets_uninstall() {
  variable_del('search_api_facets_search_ids');
  variable_del('search_api_facets_current_search_options');
}

/**
 * Implements hook_update_dependencies().
 */
function search_api_facets_update_dependencies() {
  // This update should run after primary IDs have been changed to machine names in the framework.
  $dependencies['search_api_facets'][7101] = array(
    'search_api' => 7102,
  );
  return $dependencies;
}

/**
 * Make {search_api_facet}.index_id the index' machine name.
 */
function search_api_facets_update_7101() {
  db_drop_index('search_api_facet', 'field');
  $spec = array(
    'description' => 'The {search_api_index}.machine_name this facet belongs to.',
    'type' => 'varchar',
    'length' => 50,
    'not null' => TRUE,
  );
  db_change_field('search_api_facet', 'index_id', 'index_id', $spec);
  db_add_index('search_api_facet', 'field', array('index_id', array('field', 50)));

  foreach (db_query('SELECT id, machine_name FROM {search_api_index}') as $index) {
    // We explicitly forbid numeric machine names, therefore we don't have to worry about conflicts here.
    db_update('search_api_facet')
      ->fields(array(
        'index_id' => $index->machine_name,
      ))
      ->condition('index_id', $index->id)
      ->execute();
  }
}

/**
 * Add a numeric id for facets, as required for all entities.
 */
function search_api_facets_update_7102() {
  db_drop_primary_key('search_api_facet');
  $spec = array(
    'description' => 'The primary identifier for a facet.',
    'type' => 'serial',
    'unsigned' => TRUE,
    'not null' => TRUE,
  );
  $keys_new = array(
    'unique keys' => array(
      'delta' => array('delta'),
    ),
    'primary key' => array('id'),
  );
  db_add_field('search_api_facet', 'id', $spec, $keys_new);
  $deltas = db_select('search_api_facet', 'f')
    ->fields('f', array('delta'))
    ->execute()
    ->fetchCol();
  $i = 0;
  foreach ($deltas as $delta) {
    db_update('search_api_facet')
      ->fields(array(
        'id' => ++$i,
      ))
      ->condition('delta', $delta)
      ->execute();
  }
}

/**
 * Add the database fields newly required for entities by the Entity API.
 */
function search_api_facets_update_7103() {
  if (!function_exists('entity_exportable_schema_fields')) {
    throw new DrupalUpdateException(t('Please update the Entity API module first.'));
  }
  foreach (entity_exportable_schema_fields() as $field => $spec) {
    db_add_field('search_api_facet', $field, $spec);
  }
}

/**
 * Add a "show_active" option for all facets.
 */
function search_api_facets_update_7104() {
  $rows = db_select('search_api_facet', 'f')
    ->fields('f', array('id', 'options'))
    ->execute()
    ->fetchAllKeyed();
  foreach ($rows as $id => $options) {
    $opt = unserialize($options);
    $opt += array('show_active' => TRUE);
    $opt = serialize($opt);
    if ($opt != $options) {
      db_update('search_api_facet')
        ->fields(array(
          'options' => $opt,
        ))
        ->condition('id', $id)
        ->execute();
    }
  }
}
