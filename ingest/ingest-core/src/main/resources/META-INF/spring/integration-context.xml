<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/integration
							http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
							http://www.springframework.org/schema/integration/file
							http://www.springframework.org/schema/integration/file/spring-integration-file-2.0.xsd">

	<context:component-scan base-package="com.bhle.ingest.integration" />

	<poller default="true">
		<interval-trigger interval="${ingest.poller.interval}" />
	</poller>

	<int-file:inbound-channel-adapter id="filesystemInboundAdapter"
		directory="file:${ingest.sip.directory}" filter="compositeFilter"
		channel="inboundFileChannel" scanner="sipDirectoryScanner">
	</int-file:inbound-channel-adapter>
	<beans:bean id="sipDirectoryScanner"
		class="com.bhle.ingest.integration.ReadySipFolderScanner" />

	<beans:bean id="compositeFilter"
		class="org.springframework.integration.file.filters.CompositeFileListFilter">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.integration.file.filters.AcceptOnceFileListFilter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>

	<channel id="inboundFileChannel" />

	<transformer input-channel="inboundFileChannel"
		output-channel="inboundSipChannel" ref="sipTransformer" />

	<channel id="inboundSipChannel">
		<queue />
	</channel>

	<transformer ref="jobLaunchRequestTransformer"
		input-channel="inboundSipChannel" output-channel="jobLaunchChannel" />

	<channel id="jobLaunchChannel" />

	<beans:bean id="jobMessageHandler"
		class="org.springframework.batch.integration.launch.JobLaunchingMessageHandler">
		<beans:constructor-arg ref="jobLauncher" />
	</beans:bean>
	<service-activator input-channel="jobLaunchChannel"
		output-channel="statusChannel" ref="jobMessageHandler" />

	<channel id="statusChannel">
		<queue capacity="100" />
	</channel>

	<gateway id="fedoraGateway" service-interface="com.bhle.ingest.FedoraService">
		<method name="ingestItem" request-channel="fedoraRequestChannel"
			reply-channel="fedoraReplyChannel" />
	</gateway>

	<channel id="fedoraRequestChannel" />
	<channel id="fedoraReplyChannel" />

	<beans:bean id="fedoraServiceImpl" class="com.bhle.ingest.FedoraServiceImpl">
		<beans:constructor-arg ref="fedoraClient" />
	</beans:bean>
	<service-activator input-channel="fedoraRequestChannel"
		output-channel="fedoraReplyChannel" ref="fedoraServiceImpl" />

</beans:beans>