#
#                        Proai Configuration 
#                 ================================

##############################
# Front-End OAI-PMH Behavior #
##############################

# For multi-part OAI responses, this specifies the maximum time to wait 
# between requests before cleaning up the session.
#
proai.secondsBetweenRequests = 600

# The maximum number of records to include in each part of a 
# ListRecords response.
#
proai.incompleteRecordListSize = 250

# The maximum number of record headers to include in each part of a 
# ListIdentifiers response.
#
proai.incompleteIdentifierListSize = 500

# The maximum number of sets to include in each part of a 
# ListSets response.
#
proai.incompleteSetListSize = 500


############################
# Back-End Update Behavior #
############################

# How often Proai should poll the driver for updates.
#
proai.driverPollSeconds = 30

# Set this to false to start the service without polling enabled.
# Note: You can also change polling behavior while the service is running
# by executing the following SQL against the database:
#
# <pre>
#     UPDATE rcAdmin SET pollingEnabled = 0 (or 1 to enable it)
# </pre>
#
# The value configured via this property will always be put into effect 
# when the service is started.
#
proai.driverPollingEnabled = true

# The maximum number of worker threads to use while retrieving new/updated
# OAI records from the driver.
#
proai.maxWorkers = 5

# How many requests each worker thread should make before returning the
# batch to the database to be committed.
#
proai.maxWorkBatchSize = 10

# If a request of the driver for a specific record fails for any reason,
# this is the maximum number of times that record should be automatically
# retried before giving up on that record.  If this is exceeded, the
# record information will remain in the rcFailure table until it is dealt
# with manually.
#
proai.maxFailedRetries = 3

# The maximum size the in-memory record commit queue is allowed to reach.
# If this threshold is reached, it means that worker threads are returning
# results faster than they can be committed to the database by the commit 
# thread.  If this occurs, workers will have to wait until more items have
# been committed before they can add any more to the queue.
#
proai.maxCommitQueueSize = 120

# The maximum number of record updates (from the in-memory commit queue) 
# that should be committed to the database at one time.
#
proai.maxRecordsPerTransaction = 60

# Whether to run schema validation during the update process.
# This defaults to true.
#
proai.validateUpdates = true

##########################
# File Storage Locations #
##########################

# The directory where cache files should be stored. This will be created 
# if it doesn't exist.
#
proai.cacheBaseDir            = build/test/cache

# Where OAI-PMH session data will be stored when needed.
# This directory will be created at startup if it doesn't already exist.
#
# Each session consists of a series of small data files in a uniquely-named 
# subdirectory beneath this one.  They are automatically created and 
# removed as needed.
#
proai.sessionBaseDir = build/test/sessions

# Where to store schema files if validation is enabled.
#
proai.schemaDir = build/test/schemas

##################################
# Primary Database Configuration #
##################################

# The JDBC connection URL for the database that will be used by the cache.
#
# <p>Embedded McKoi example:<br/>
#    <code>jdbc:mckoi:local://build/test/mckoi/mckoi.conf?create_or_boot=true</code>
# </p>
# <p>Local McKoi example:<br/>
#    <code>jdbc:mckoi://localhost/</code>
# </p>
# <p>Local MySQL example:<br/>
#    <code>jdbc:mysql://localhost/proai?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true</code>
# </p>
# <p>Local Oracle example:<br/>
#    <code>jdbc:oracle:thin:@localhost:1521:proai</code>
# </p>
# <p>Local Postgres example:<br/>
#    <code>jdbc:postgresql://localhost/proai</code>
# </p>
#
proai.db.url = jdbc:mysql://localhost/int_ac_oai?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true

# The class name of the JDBC driver appropriate for use 
# with the connection url.  The appropriate library must be 
# in the classpath.
#
# <p>Mckoi example:<br/>
#   <code>proai.db.driverClassName = com.mckoi.JDBCDriver</code>
# </p>
# <p>MySQL example:<br/>
#   <code>proai.db.driverClassName = com.mysql.jdbc.Driver</code>
# </p>
# <p>Oracle example:<br/>
#   <code>proai.db.driverClassName = oracle.jdbc.driver.OracleDriver</code>
# </p>
# <p>Postgres example:<br/>
#   <code>proai.db.driverClassName = org.postgresql.Driver</code>
# </p>
#
proai.db.driverClassName = com.mysql.jdbc.Driver

# If using MySQL, this indicates whether to stream query results 
# one-at-a-time from the database to conserve memory.  If unspecified, 
# this defaults to false.
#
# <p>
# Background: For large repositories, MySQL's default behavior of reading
# all results into memory can cause <code>OutOfMemory</code> errors in 
# Proai.  If this value is set to true, memory requirements for Proai 
# will be lower, but query performance will suffer.  For more detail,
# please see the 
# <a href="http://dev.mysql.com/doc/connector/j/en/cj-implementation-notes.html">Connector-J 
# Implementation Notes</a>.
# </p>
#
proai.db.mySQLResultTrickling = false

# The database user.  This user should already exist in the database
# and must have permission to create, modify, and query tables.
#
proai.db.username        = root

# The password for the database user.
#
proai.db.password        = root


###################################
# Advanced Database Configuration #
###################################

# The maxiumum number of connections from the pool that may be active
# (leased) at once.  If unspecified, this defaults to 8.
#
proai.db.maxActive = 16

# The maximum number of milliseconds to wait for a connection from the
# pool if none are available.  If unspecified, this defaults to -1,
# which means "indefinite".
#
proai.db.maxWait = 5000

# proai.db.*
#
# Any other properties defined by the Apache commons-DBCP project
# can be specified.  See the full list (and documentation) at
# http://jakarta.apache.org/commons/dbcp/configuration.html
# 
# To use standard DBCP properties, just prefix them with "proai.db."
# here.  

# proai.db.connection.*
# 
# To use JDBC driver-specific properties (in DBCP, these 
# are called "connectionProperties"), prefix them with
# "proai.db.connection.".

# The Java class responsible for creating the database tables required
# by Proai's record cache.
#
# <p>The name of the property should be the driverClassName of the JDBC 
# driver you're using, plus ".ddlConverter".</p>
#
com.mysql.jdbc.Driver.ddlConverter           = proai.util.MySQLDDLConverter

# Whether the database interprets backslashes in SQL strings as
# escape characters.  This is needed to that Proai can formulate
# proper queries against the database.
#
# <p>The name of the property should be the driverClassName of the JDBC
# driver you're using plus ".backslashIsEscape".  If unspecified, 
# backslashIsEscape will be assumed true.</p>
#
com.mysql.jdbc.Driver.backslashIsEscape           = true


####################################
# OAIDriver-Specific Configuration #
####################################

# The class name of the proai.driver.OAIDriver implementation to use.
# The appropriate library must be in the classpath.
#
proai.driverClassName = com.bhle.access.oai.OAIDriverImpl


metadataFormat.ese.prefix = ese
metadataFormat.ese.datastream = ESE
metadataFormat.ese.namespace = http://www.europeana.eu/schemas/ese
metadataFormat.ese.schemaLocation = http://www.europeana.eu/schemas/ese/ESE-V3.4.xsd

# metadataFormat.mods.prefix = mods
# metadataFormat.mods.datastream = MODS
# metadataFormat.mods.namespace = http://www.loc.gov/standards/mods/v3
# metadataFormat.mods.schemaLocation = http://www.loc.gov/standards/mods/v3/mods-3-0.xsd

setInfo.monograph.name = Monograph
setInfo.monograph.spec = bhle:monograph
setInfo.monograph.contentModel = bhle-cmodel:monographCModel