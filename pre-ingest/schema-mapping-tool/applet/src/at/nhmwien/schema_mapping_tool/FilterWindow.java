/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package at.nhmwien.schema_mapping_tool;

import at.nhmwien.schema_mapping_tool.mappingProcess.MappingsHandler;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.DefaultListModel;

/**
 *
 * @author wkoller
 */
public class FilterWindow extends javax.swing.JFrame {
    private DefaultListModel listModel = new DefaultListModel();

    /**
     * Creates new form FilterWindow
     */
    public FilterWindow() {
        initComponents();
        
        this.skipFilterList.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        skipFilterList = new javax.swing.JList();
        filterIDTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        filterContentTextField = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();

        setTitle("Filter");
        setResizable(false);

        skipFilterList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        skipFilterList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                skipFilterListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(skipFilterList);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filterIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filterContentTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filterIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filterContentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton)
                            .addComponent(deleteButton)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if( !filterIDTextField.getText().isEmpty() ) {
            MappingsHandler.Self().addSkipFilter(filterIDTextField.getText(), filterContentTextField.getText());
            filterIDTextField.setText("");
            filterContentTextField.setText("");
        }
        
        this.setVisible(false);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void skipFilterListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_skipFilterListValueChanged
        if(!evt.getValueIsAdjusting()) {
            if( skipFilterList.getSelectedValue() != null ) {
                Map.Entry<String,String> selectedSkipFilter = (Map.Entry<String,String>) skipFilterList.getSelectedValue();
                filterIDTextField.setText(selectedSkipFilter.getKey());
                filterContentTextField.setText(selectedSkipFilter.getValue());
            }
        }
    }//GEN-LAST:event_skipFilterListValueChanged

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if( skipFilterList.getSelectedValue() != null ) {
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    @Override
    public void setVisible(boolean bVisible) {
        listModel.clear();
        
        HashMap<String,String> skipFilter = MappingsHandler.Self().getSkipFilter();
        Iterator<Map.Entry<String,String>> sf_it = skipFilter.entrySet().iterator();
        while( sf_it.hasNext() ) {
            Map.Entry<String,String> currSkipFilter = sf_it.next();
            listModel.addElement(currSkipFilter);
        }
        
        super.setVisible(bVisible);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField filterContentTextField;
    private javax.swing.JTextField filterIDTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveButton;
    private javax.swing.JList skipFilterList;
    // End of variables declaration//GEN-END:variables
}
