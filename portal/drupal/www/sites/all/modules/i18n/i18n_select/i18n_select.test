<?php
/**
 * @file
 * Test language selection modes
 */

class i18nSelectTestCase extends Drupali18nTestCase {

  function getInfo() {
    return array(
      'name' => 'Content Selection',
      'group' => 'Internationalization',
      'description' => 'Internationalization Content Selection'
    );
  }

  function setUp() {
    parent::setUp('translation', 'i18n_variable', 'i18n_select');
    parent::setUpLanguages();
    parent::setUpContentTranslation();
  }

  function testIi18nSelect() {
    drupal_static_reset('language_list');
    $language_list = language_list();
    $language_count = count($language_list);
    // Set site name for each language and check pages later
    variable_set('i18n_variable_list', array('site_name'));
    foreach (i18n_language_list() as $langcode => $name) {
      i18n_variable_set('site_name', "Drupal-$name", $langcode);
    }
    // Create some content and check selection modes
    $this->drupalLogin($this->translator); 
    
    // variable_set('language_content_type_story', 1);
    $neutral = $this->drupalCreateNode(array('type' => 'page', 'promote' => 1));
    $source = $this->i18nCreateNode(language_default('language'), array('type' => 'page', 'promote' => 1));
    $translations = $this->createNodeTranslationSet($source);

    // This fails because the _get_translations() function has static caching
    //$this->assertEqual(count(translation_node_get_translations($source->tnid)), $language_count, "Created $language_count $source->type translations.");
    $this->assertEqual(count($translations), $language_count, "Created $language_count $source->type translations.");

    // Log in user with access content permission
    $user = $this->drupalCreateUser(array('access comments', 'access content'));
    $this->drupalLogin($user);
    // Default selection mode, only language neutral and current
    variable_set('i18n_select_nodes', TRUE);
    foreach (i18n_language_list() as $langcode => $name) {
      $this->i18nGet($langcode);
      $this->assertText("Drupal-$name", 'Checked translated site name: Drupal-' . $name);
      $display = array($translations[$langcode], $neutral);
      $hide = $translations;
      unset($hide[$langcode]);
      $this->assertContent($display, $hide);
    }

  }

  /**
   * Check some nodes are displayed, some are not
   */
  function assertContent($display, $hide = array()) {
    $languages = language_list();
    foreach ($display as $node) {
      $this->assertText($node->title, 'Content displayed for ' . i18n_language_name($node->language));
    }
    foreach ($hide as $node) {
      $this->assertNoText($node->title, 'Content not displayed for ' . i18n_language_name($node->language));
    }
  }
}