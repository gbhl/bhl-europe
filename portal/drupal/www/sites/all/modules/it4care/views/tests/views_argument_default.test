<?php

/**
* Basic test for pluggable argument default.
*/
class ViewsArgumentDefaultTest extends ViewsSqlTest {
  public static function getInfo() {
    return array(
      'name' => t('Argument_default'),
      'description' => t('Tests pluggable argument_default for views.'),
      'group' => t('Views Plugins')
    );
  }

  public function setUp() {
    parent::setUp('views');

    $this->random = $this->randomString();
  }

  /**
   * Test fixed default argument.
   */
  function testArgumentDefaultFixed() {
    $view = $this->view_argument_default_fixed();

    $view->set_display('default');
    $view->execute_display();
    $view->destroy();

    $this->assertEqual($view->args[0], $this->random, 'Fixed argument should be used by default.');

    // Take sure that a normal argument provided is used
    $view = $this->view_argument_default_fixed();

    $view->set_display('default');
    $random_string = $this->randomString();
    $view->execute_display('default', array($random_string));

    $this->assertEqual($view->args[0], $random_string, 'Provided argument should be used.');
  }

  /**
   * @todo Test php default argument.
   */
  function testArgumentDefaultPhp() {

  }

  /**
   * @todo Test node default argument.
   */
  function testArgumentDefaultNode() {

  }

  function view_argument_default_fixed() {
    $view = new view;
    $view->name = 'test_argument_default_fixed';
    $view->description = '';
    $view->tag = '';
    $view->view_php = '';
    $view->base_table = 'node';
    $view->is_cacheable = FALSE;
    $view->api_version = 2;
    $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

    /* Display: Master */
    $handler = $view->new_display('default', 'Master', 'default');
    $handler->display->display_options['access']['type'] = 'none';
    $handler->display->display_options['cache']['type'] = 'none';
    $handler->display->display_options['exposed_form']['type'] = 'basic';
    $handler->display->display_options['pager']['type'] = 'full';
    $handler->display->display_options['pager']['options']['items_per_page'] = '10';
    $handler->display->display_options['pager']['options']['offset'] = '0';
    $handler->display->display_options['pager']['options']['id'] = '0';
    $handler->display->display_options['style_plugin'] = 'default';
    $handler->display->display_options['row_plugin'] = 'fields';
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['alter']['alter_text'] = 0;
    $handler->display->display_options['fields']['title']['alter']['make_link'] = 0;
    $handler->display->display_options['fields']['title']['alter']['trim'] = 0;
    $handler->display->display_options['fields']['title']['alter']['word_boundary'] = 1;
    $handler->display->display_options['fields']['title']['alter']['ellipsis'] = 1;
    $handler->display->display_options['fields']['title']['alter']['strip_tags'] = 0;
    $handler->display->display_options['fields']['title']['alter']['html'] = 0;
    $handler->display->display_options['fields']['title']['hide_empty'] = 0;
    $handler->display->display_options['fields']['title']['empty_zero'] = 0;
    $handler->display->display_options['fields']['title']['link_to_node'] = 0;
    /* Argument: Global: Null */
    $handler->display->display_options['arguments']['null']['id'] = 'null';
    $handler->display->display_options['arguments']['null']['table'] = 'views';
    $handler->display->display_options['arguments']['null']['field'] = 'null';
    $handler->display->display_options['arguments']['null']['default_action'] = 'default';
    $handler->display->display_options['arguments']['null']['style_plugin'] = 'default_summary';
    $handler->display->display_options['arguments']['null']['default_argument_type'] = 'fixed';
    $handler->display->display_options['arguments']['null']['default_argument_options']['argument'] = $this->random;
    $handler->display->display_options['arguments']['null']['must_not_be'] = 0;

    return $view;
  }
}