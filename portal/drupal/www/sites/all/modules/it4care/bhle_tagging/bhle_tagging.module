<?php

define('BHLE_TAGGING_ADD', 'Add to basket');
define('BHLE_TAGGING_REMOVE', 'Remove from basket');

define('BHLE_TAGGING_ADDED', '<a href="/bhle-basket"><strong>Added to your basket:</strong></a><br/><em>@item</em>');
define('BHLE_TAGGING_REMOVED', '<a href="/bhle-basket"><strong>Removed from your basket:</strong></a><br /><em>@item</em>');

/**
 * Implements hook_menu().
 */
function bhle_tagging_menu() {
  $items['bhle-basket'] = array(
    'title callback' => 'bhle_tagging_basket_title',
    'page callback' => 'bhle_tagging_basket_page',
    'access callback' => 'bhle_tagging_access',
    'type' => MENU_CALLBACK,
  );
  /*
  $items['bhle-basket/download'] = array(
    'page callback' => 'bhle_tagging_basket_download',
    'access callback' => 'bhle_tagging_access',
    'type' => MENU_CALLBACK,
  );
  * 
  */
  $items['bhle-tagging/%'] = array(
    'title callback' => 'bhle_tagging_operation_title',
    'title arguments' => array(1),
    'page callback' => 'bhle_tagging_operation_page',
    'page arguments' => array(1),
    'access callback' => 'bhle_tagging_access',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function bhle_tagging_permission() {
  $perms = array(
    'access bhle basket' => array(
      'title' => t('Access BHL Europe basket'),
    ),
  );
  return $perms;
}

/**
 * Access callback.
 */
function bhle_tagging_access() {
  global $user;
  return TRUE;
}

/**
 * Title callback.
 */
function bhle_tagging_basket_title($pid) {
  return t('Your basket');
}

/**
 * Title callback.
 */
function bhle_tagging_operation_title($pid) {
  drupal_load('module', 'bhle_item');
  $item = bhle_item_load($pid);
  return $item->mods_title[0] . t(' added/removed to your basket');
}

/*
 * Page callback for BHLE basket
 */

function bhle_tagging_basket_page() {  
  if (is_array($_SESSION['bhle-tagging'])) {
    $output = drupal_render(drupal_get_form('bhle_tagging_basket_download_form'));
    $output .= drupal_render(drupal_get_form('bhle_tagging_basket_delete_form'));

    //$output .= '<div class="messages ok">';
    //$output .= l(t('Download metadata from my basket'), 'bhle-basket/download', array('attributes' => array('class' => 'bhle-basket-button')));
    //$output .= '</div>';
  } else {
    $output = t('No item in your basket.');
  }
  return $output;
}

/**
 * Implements hook_form();
 */
function bhle_tagging_basket_download_form($form, &$form_state) {
  $header = array('pid' => t('ID'), 'link' => t('Title'));
  
  foreach ($_SESSION['bhle-tagging'] as $pid => $item) {
    $rows[$pid] = array(
      'pid' => $pid,
      'link' => l($item, 'bhle-view/' . $pid),
    );
  }

  $form['pids'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $rows,
    '#multiple' => TRUE,
  );
  $form['types'] = array(
    '#type' => 'checkboxes',
    '#options' => array(
      'summary' => t('Summary'),
      'mods' => t('MODS'),
      'endnote' => t('Endnote'),
      'bibtex' => t('Bibtex'),
      'olef' => t('OLEF'),
      'all' => t('All'),
    ),
  );
  $form['submit'] = array(
    'download' => array(
      '#type' => 'submit',
      '#submit' => array('bhle_tagging_basket_download_form_submit'),
      '#value' => t('Download selected'),
      '#prefix' => '<div class="div-form-submit radius gradient-vertical-grey">',
      '#suffix' => '</div>',
    ),
    'delete' => array(
      '#type' => 'submit',
      '#submit' => array('bhle_tagging_basket_delete_form_submit'),
      '#value' => t('Remove from basket'),
      '#prefix' => '<div class="div-form-submit radius gradient-vertical-grey">',
      '#suffix' => '</div>',
    ),
    //'#suffix' => t('Nothing selected means ALL.'),
  );
  $form['#attached']['js'][] = drupal_get_path('module', 'bhle_tagging') . '/bhle_tagging.js';
  return $form;
}

function bhle_tagging_basket_download_form_submit($form, &$form_state) {
  foreach($form_state['input']['pids'] as $pid) {
    if($pid) {
      $pids = 1;
    }
  }
  foreach($form_state['input']['types'] as $type) {
    if($type != 'all' && $type != NULL) {
      $types = 1;
    }
  }
  
  if ($pids) {
    $pids = $form_state['input']['pids'];
  } else {
    $pids = $_SESSION['bhle-tagging'];
  }
  
  if ($types) {
    $types = $form_state['input']['types'];
  } else {
    $types = array('all');
  }
  bhle_tagging_basket_download($pids, $types);
}

function bhle_tagging_basket_delete_form($form, &$form_state) {
  $form = array();
  return $form;
}

function bhle_tagging_basket_delete_form_submit($form, &$form_state) {
  if ($form_state['input']['pids']) {
    foreach ($form_state['input']['pids'] as $pid => $item) {
      if($item) {
        unset($_SESSION['bhle-tagging'][$pid]);
      }
    }
  } else {
    unset($_SESSION['bhle-tagging']);
  }
  drupal_set_message(t('All items deleted from basket'));
}

/*
 * Page callback for non-ajax users
 */

function bhle_tagging_operation_page($pid) {
  return 'op done';
}

function bhle_tagging_operation_form($form, &$form_state, $pid = NULL, $title = NULL) {
  drupal_load('module', 'transliteration');
  module_load_all_includes('inc', 'transliteration');
  $safe_pid = str_replace(':', '-', transliteration_get($pid));
  $form['#prefix'] = '<div id="bhle-tag-' . $safe_pid . '" class="result-buttons radius gradient-vertical-grey">';
  $form['#suffix'] = '</div>';
  //$form['#action'] = 'bhle-tagging/' . $pid;
  $form['submit']['do'] = array(
    '#type' => 'submit',
    '#submit' => array('bhle_tagging_operation_submit'),
    '#ajax' => array(
      'method' => 'replaceWith',
      'event' => 'click',
      'wrapper' => 'bhle-tag-' . $safe_pid,
      'callback' => 'bhle_tagging_ajax_callback'
    ),
  );
  $form['pid'] = array(
    '#type' => 'hidden',
    '#value' => $pid
  );
  $form['title'] = array(
    '#type' => 'hidden',
    '#value' => $title
  );
  $form['bhle-tagging-action'] = array(
    '#type' => 'hidden',
  );

  if ($_SESSION['bhle-tagging'][$pid]) {
    $form['submit']['do']['#value'] = t(BHLE_TAGGING_REMOVE);
    $form['bhle-tagging-action']['#value'] = 'remove';
  } else {
    $form['submit']['do']['#value'] = t(BHLE_TAGGING_ADD);
    $form['bhle-tagging-action']['#value'] = 'add';
  }
  return $form;
}

function bhle_tagging_operation_submit($form, &$form_state) {
  if (arg(0) != 'system' && arg(1) != 'ajax') {
    $pid = $form_state['input']['pid'];
    $title = html_entity_decode($form_state['input']['title'], ENT_QUOTES, 'UTF-8');
    $action = $form_state['input']['bhle-tagging-action'];

    if ($_SESSION['bhle-tagging'][$pid] && $action == 'remove') {
      unset($_SESSION['bhle-tagging'][$pid]);
      drupal_set_message(t(BHLE_TAGGING_REMOVED, array('@item' => $title)));
    }
    if (!$_SESSION['bhle-tagging'][$pid] && $action == 'add') {
      $_SESSION['bhle-tagging'][$pid] = $title;
      drupal_set_message(t(BHLE_TAGGING_ADDED, array('@item' => $title)));
    }
  }
}

function bhle_tagging_ajax_callback($form, $form_state) {
  $pid = $form_state['input']['pid'];
  $title = html_entity_decode($form_state['input']['title'], ENT_QUOTES, 'UTF-8');
  $action = $form_state['input']['bhle-tagging-action'];

  if ($_SESSION['bhle-tagging'][$pid] && $action == 'remove') {
    unset($_SESSION['bhle-tagging'][$pid]);
    drupal_set_message(t(BHLE_TAGGING_REMOVED, array('@item' => $title)));
    $form['submit']['do']['#value'] = t(BHLE_TAGGING_ADD);
    $form['bhle-tagging-action']['#value'] = 'add';
  }
  if (!$_SESSION['bhle-tagging'][$pid] && $action == 'add') {
    $_SESSION['bhle-tagging'][$pid] = $title;
    drupal_set_message(t(BHLE_TAGGING_ADDED, array('@item' => $title)));
    $form['submit']['do']['#value'] = t(BHLE_TAGGING_REMOVE);
    $form['bhle-tagging-action']['#value'] = 'remove';
  }
  $basket = module_invoke('bhle_tagging', 'block_view', 'basket');

  $commands = array();
  $commands[] = ajax_command_insert(NULL, drupal_render($form));
  $commands[] = ajax_command_insert('#bhle-tagging-basket', $basket['content']);
  $commands[] = ajax_command_before('#results', theme('status_messages'));
  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Implements hook_block_info();
 */
function bhle_tagging_block_info() {
  $blocks['basket'] = array(
    'info' => t('BHLE basket'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view();
 */
function bhle_tagging_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'basket':
      $block['subject'] = t('Your basket');
      $block['content'] = '<div id="bhle-tagging-basket">';
      if (count($_SESSION['bhle-tagging'])) {
        $block['content'] .= l(t('@items items in basket', array('@items' => count($_SESSION['bhle-tagging']))), 'bhle-basket');
      } else {
        $block['content'] .= t('No items in basket');
      }
      $block['content'] .= '</div>';
      break;
  }
  return $block;
}

function bhle_tagging_basket_download($pids, $types) {
    foreach ($pids as $pid => $item) {
      if($item) {
        drupal_load('module', 'bhle_item');

        if (in_array('mods', $types) || in_array('all', $types)) {
          $uri_mods = bhle_tagging_prepare_meta($pid, 'mods');
          if ($uri_mods) {
            $files[] = $uri_mods;
          }
        }

        if (in_array('endnote', $types) || in_array('all', $types)) {
          $uri_endnote = bhle_tagging_prepare_meta($pid, 'endnote');
          if ($uri_endnote) {
            $files[] = $uri_endnote;
          }
        }

        if (in_array('bibtex', $types) || in_array('all', $types)) {
          $uri_bibtex = bhle_tagging_prepare_meta($pid, 'bibtex');
          if ($uri_bibtex) {
            $files[] = $uri_bibtex;
          }
        }

        if (in_array('olef', $types) || in_array('all', $types)) {
          $uri_olef = bhle_tagging_prepare_meta($pid, 'olef');
          if ($uri_olef) {
            $files[] = $uri_olef;
          }
        }

        if (in_array('summary', $types) || in_array('all', $types)) {
          $uri_summary = bhle_tagging_prepare_meta($pid, 'summary');
          if ($uri_summary) {
            $files[] = $uri_summary;
          }
        }
      }
    }

    $zip = new ZipArchive();
    $zipuri = 'temporary://bhl-europe-basket--' . date('Y-m-d--h-m-s') . '.zip';
    $filename = drupal_realpath($zipuri);


    if ($zip->open($filename, ZIPARCHIVE::CREATE) !== TRUE) {
      $output .= "cannot open <$filename><br />";
    } else {
      foreach ($files as $fileuri) {
        $zip->addFile(drupal_realpath($fileuri), basename($fileuri));
        $output .= "numfiles: " . $zip->numFiles . "<br />";
        $output .= "status:" . $zip->status . "<br />";
      }
      $zip->close();
    }


    $headers = array(
      'Content-Disposition:' => 'attachment; filename="' . basename($zipuri) . '"',
      'Content-Transfer-Encoding' => 'binary',
      'Content-Type' => 'force-download',
    );
    file_transfer($zipuri, $headers);
}

function bhle_tagging_prepare_meta($pid, $type = 'summary') {
  $pos = strpos($pid, '-');
  $bid = substr($pid, $pos + 1);
  switch ($type) {
    case 'summary':
    case 'abstract':
      $ext = 'txt';
      break;
    case 'mods':
    case 'olef':
      $ext = 'xml';
      break;
    default:
      $ext = $type;
      break;
  }

  $uri = 'temporary://' . transliteration_get($bid) . '_' . $type . '.' . $ext;
  if (!file_exists($uri)) {
    switch ($type) {
      case 'summary':
        $item = bhle_item_load($pid);
        $rendered = _template_preprocess_bhle_item($item);
        $content = str_replace('</label>', ': ', $rendered['meta_summary_source']);
        $content = str_replace('</li>', "\r\n", $content);
        $content = strip_tags($content);
        break;
      case 'olef':
        $url = variable_get('bhle_environment', BHLE_ENVIRONMENT) . '/' . str_replace('%bid', $bid, BHLE_OLEF_URI);
        break;
      case 'mods':
        $url = variable_get('bhle_environment', BHLE_ENVIRONMENT) . '/' . str_replace('%bid', $bid, BHLE_MODS_URI);
        break;
      case 'endnote':
        $url = variable_get('bhle_environment', BHLE_ENVIRONMENT) . '/' . str_replace('%bid', $bid, BHLE_ENDNOTE_URI);
        break;
      case 'bibtex':
        $url = variable_get('bhle_environment', BHLE_ENVIRONMENT) . '/' . str_replace('%bid', $bid, BHLE_MODS_URI);
        break;
    }

    switch ($type) {
      default:
        $type = 'summary';

      case 'summary':
        $data = $content;
        break;
      case 'olef':
      case 'mods':
      case 'endnote':
      case 'bibtex':
        $response = drupal_http_request($url);
        $data = $response->data;
    }
    if (!empty($data)) {
      file_save_data($data, $uri, FILE_EXISTS_REPLACE);
    } else {
      return false;
    }
  }
  return $uri;
}