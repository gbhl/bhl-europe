/* $HeadURL::                                                                            $
 * $Id$
 *
 * Copyright (c) 2009 DuraSpace
 * http://duraspace.org
 *
 * In collaboration with Topaz Inc.
 * http://www.topazproject.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
digraph blob {
  rankdir=LR;
  overlap=false

  node [shape = doublecircle]; NotExists Exists Error;
  node [shape = circle];

  NotExists -> Error [ style = dotted, label = "*::IOException" ];
  NotExists -> NotExists [ label = "exists() == false, delete(), getId(), getConnection()::*" ];
  NotExists -> NotExists [ label = "openInputStream()::others" ];
  NotExists -> Exists [ label = "openOutputStream(*,false)::DuplicateBlobException" ];
  NotExists -> Exists [ label = "openOutputStream(*,*)::none" ];
  NotExists -> NotExists [ label = "getSize()::others" ];
  NotExists -> NotExists [ style = dotted, label = "moveTo()::others" ];

  Exists -> Error [ style = dotted, label = "*::IOException" ];
  Exists -> Exists [ label = "exists() == true, getId(), getConnection()::*" ];
  Exists -> NotExists [ label = "delete()::void" ];
  Exists -> Exists [ label = "openInputStream()::others" ];
  Exists -> Exists [ label = "openOutputStream()::others" ];
  Exists -> Exists [ label = "getSize()::success" ];
  Exists -> NotExists [ label = "moveTo()::sucess" ];
  Exists -> Exists [ style = dotted, label = "moveTo()::others" ];

  Error -> Error [ label = "*::*" ];
}
